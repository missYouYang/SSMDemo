<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lz.nvshui.dao.UserDao">

    <resultMap id="BaseResultMap" type="com.lz.nvshui.model.UserBean">
        <!--需要开启驼峰命名 实体类字段和数据库字段相对映-->
    </resultMap>

    <sql id="Base_Column_List">
        SELECT A.USER_ID,A.USER_NAME,A.USER_PASSWORD,A.USER_PHONE,A.USER_SEX,A.STATUS,A.CREATE_USER,
        DATE_FORMAT(A.CREATE_TIME,'%Y-%m-%d %h:%m:%s') AS CREATE_TIME FROM AD_USER A
        WHERE 1=1
        <if test="userName != null and userName != ''">
            AND A.USER_NAME LIKE CONCAT(CONCAT('%',#{userName}),'%')
        </if>
        <if test="userPhone != null and userPhone != ''">
            AND A.USER_PHONE LIKE CONCAT(CONCAT('%',#{userPhone}),'%')
        </if>
        AND A.STATUS != -1
        <if test="sortOrder != null and sortOrder != ''">
            order by A.CREATE_TIME ${sortOrder}
        </if>
    </sql>

    <!-- 查询所有用户 -->
    <select id="selectUsrList" parameterType="com.lz.nvshui.model.UserBean" resultMap="BaseResultMap">
        <include refid="Base_Column_List"/>
    </select>

    <!-- 根据用户名和密码查找用户 -->
    <select id="findUserByNameAndPs" parameterType="com.lz.nvshui.model.UserBean" resultMap="BaseResultMap">
        <include refid="Base_Column_List"/>
    </select>

    <!-- 添加数据 -->
    <insert id="insertUser" parameterType="com.lz.nvshui.model.UserBean">
		INSERT INTO AD_USER(USER_ID,USER_NAME,USER_PASSWORD,USER_PHONE,USER_SEX,CREATE_USER,CREATE_TIME) values(#{userId},#{userName},#{userPassword},#{userPhone},#{userSex},#{createUser},NOW())
	</insert>

    <update id="updateUser" parameterType="com.lz.nvshui.model.UserBean">
        update AD_USER SET
        <if test="userName != null and userName != ''">
            USER_NAME = #{userName},
        </if>
        <if test="userPassword != null and userPasswrod != ''">
            USER_PASSWORD = #{userPassword},
        </if>
        <if test="userSex != null and userSex != ''">
            USER_SEX = #{userSex},
        </if>
        <if test="status != null and status != ''">
            STATUS = #{status},
        </if>
        <if test="createUser != null and createUser != ''">
            UPDATE_USER = #{createUser},
        </if>
        UPDATE_TIME = NOW()
        where
        <choose>
            <when test="userId != null and userId != ''">
                USER_ID IN(
                    <foreach collection="userId.split(',')" item="userId" separator=",">
                        #{userId}
                    </foreach>
                )
            </when>
            <otherwise>
                1=2
            </otherwise>
        </choose>
    </update>
</mapper>