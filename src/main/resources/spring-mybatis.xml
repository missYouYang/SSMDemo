<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ldap="http://www.springframework.org/schema/ldap"
	xsi:schemaLocation="http://www.springframework.org/schema/ldap http://www.springframework.org/schema/ldap/spring-ldap-2.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
                        
    <context:annotation-config />                      
	<!-- 开启自动扫包 -->
	<context:component-scan base-package="com.lz">
		<!--制定扫包规则，不扫描@Controller注解的JAVA类，其他的还是要扫描 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    
    <!-- 引入同文件夹下的redis属性配置文件 -->
    <import resource="applicationContext-reids.xml"/>
    
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
        <property name="locations">
        	<list>
        		<value>classpath:jdbc.properties</value>
        		<value>classpath:redis.properties</value>
        	</list>
        </property>  
    </bean>  
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${maxWait}"></property>  
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
      <!-- mapper扫描 -->
		<property name="mapperLocations" value="classpath:mapper/mysql/*/*.xml"></property>
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.lz.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
               
      <!-- 基于AspectJ的事务管理  -->        
     <tx:advice id="txadvice1111" transaction-manager="transactionManager">
     	<tx:attributes>
     		<tx:method name="insert*" propagation="REQUIRED" read-only="false"/>
     		<tx:method name="update*" propagation="REQUIRED" read-only="false"/>
     		<tx:method name="save*" propagation="REQUIRED" read-only="false"/>
     		<tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
     		<tx:method name="select*" propagation="REQUIRED" read-only="false"/>
     	</tx:attributes>
     </tx:advice>   
     
     <!-- 事务的切入点 如果execution 学错回报Error creating bean with name 'userDao' defined in file -->
     <aop:config>
     	<aop:pointcut expression="execution(* com.lz.service.impl..*.*(..))" id="services111"/>
     	<aop:advisor pointcut-ref="services111" advice-ref="txadvice1111"/>
     </aop:config>         
</beans>